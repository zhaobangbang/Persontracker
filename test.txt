private static CriteriaBuilder builder = null;
private static Root<DevInfo> root = null;
public static CriteriaQuery<DevInfo> rspCriteriaQuery(Session sess){
		builder = sess.getCriteriaBuilder();
		CriteriaQuery<DevInfo> criteriaQuery = builder.createQuery(DevInfo.class);
		root = criteriaQuery.from(DevInfo.class);
		//root.fetch(arg0) 关联表用
		criteriaQuery.select(root);
	    return criteriaQuery;
}
	public static List<DevInfo> getAllDevInfo() throws Exception{
		HibernateUtils.query(new HibTransRunnable() {
			
			@Override
			public void run(Session sess) throws Exception {
				/*Criteria criteria = sess.createCriteria(DevInfo.class);
				devInfoList = criteria.list();*/
				CriteriaQuery<DevInfo> criteriaQuery = rspCriteriaQuery(sess);
				devInfoList = sess.createQuery(criteriaQuery).getResultList();
			}
		});
		return new LinkedList<DevInfo>(devInfoList);
	}
	
public static List<DevInfo> getDevInfoByMapid(String mapid) throws Exception{
		HibernateUtils.query(new HibTransRunnable() {
			
			@Override
			public void run(Session sess) throws Exception {
				CriteriaQuery<DevInfo> criteriaQuery = rspCriteriaQuery(sess);
				criteriaQuery.where(builder.equal(root.get("mapid"), builder.literal(mapid)));
				devInfoList = sess.createQuery(criteriaQuery).getResultList();
			}
		});
		return new LinkedList<DevInfo>(devInfoList);
	}
public static DevInfo getDevInfoByDeveui(String deveui) throws Exception{
		HibernateUtils.query(new HibTransRunnable() {
			
			@Override
			public void run(Session sess) throws Exception {
				// can use
				/*String hql = "from DevInfo dev where dev.deveui= :deveui";
				devInfo = (DevInfo) sess.createQuery(hql).setParameter("deveui", deveui).uniqueResult();*/
				CriteriaQuery<DevInfo> criteriaQuery = rspCriteriaQuery(sess);
				criteriaQuery.where(builder.equal(root.get("deveui"), builder.literal(deveui)));
				devInfo= sess.createQuery(criteriaQuery).getSingleResult();
			}
		});
		return devInfo;
	}
	
public static List<DevInfo> getDevInfoBySQLParament(String hql,String cloumName,String paramentValue,int start,int max) throws Exception{
		HibernateUtils.query(new HibTransRunnable() {
			@SuppressWarnings("unchecked")
			@Override
			public void run(Session sess) throws Exception {
				/*CriteriaQuery<DevInfo> criteriaQuery = rspCriteriaQuery(sess);
				devInfoList = sess.createQuery(criteriaQuery).addQueryHint(sql).getResultList();*/
				/*String hql = "from DevInfo dev where dev.devType= :devType";*/
				if(cloumName.equals("")){
					devInfoList = sess.createQuery(hql).setFirstResult(start).setMaxResults(max).getResultList();
				}else{
					devInfoList = sess.createQuery(hql).setParameter(cloumName, paramentValue).getResultList();
				}
			}
		});
		return new LinkedList<DevInfo>(devInfoList);
	}